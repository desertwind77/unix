#!/usr/bin/env python3
'''zip or unzip every file in the folder'''

import argparse
import os
import sys
import subprocess

def main():
    '''The main function'''
    parser = argparse.ArgumentParser( description='zip every file in a folder' )
    parser.add_argument( '-d', '--dryRun', action='store_true',
                         dest='dry_run', help='Dry run' )
    parser.add_argument( '-v', '--verbose', action='store_true',
                         dest='verbose', help='Print the detail' )
    parser.add_argument( '-u', '--unzip', action='store_true',
                         dest='unzip',
                         help='Running unzip instead of zip')
    parser.add_argument( 'folder', action='store',
                help='Foldre containing files to zip or unzip')

    args = parser.parse_args()

    current_dir = os.getcwd()
    os.chdir( args.folder )

    for cur_file in sorted( os.listdir( '.' ) ):
        if cur_file == '.DS_Store':
            continue

        cmd_type = cmd = None
        if args.unzip:
            cmd_type = 'unzip'
            cmd = [ cmd_type, cur_file ]
        else:
            filename, _ = os.path.splitext( cur_file )
            destination = filename + '.zip'
            cmd_type = 'zip'
            cmd = [ cmd_type, destination, cur_file ]

        if args.dry_run:
            print( ' '.join( cmd ) )
            continue
        elif args.verbose:
            print( f'{cmd_type} {cur_file}' )

        try:
            # check=True tells subprocess to raise an exception
            # on the face of errors because we don't want to
            # check the result manually
            subprocess.run( cmd, check=True,
                            stdout=subprocess.DEVNULL,
                            stderr=subprocess.DEVNULL )
        except subprocess.CalledProcessError:
            print( f'Unable to process {cur_file}', file=sys.stderr )

    os.chdir( current_dir )

if __name__ == '__main__':
   main()
